[build-wasm]
canister = "llama_cpp"
did_path = "src/llama_cpp.did"
cpp_paths = [
    "src/llama_cpp_onicai_fork/unicode-data.cpp",
    "src/llama_cpp_onicai_fork/unicode.cpp",
    "src/llama_cpp_onicai_fork/common/json-schema-to-grammar.cpp",
    "src/llama_cpp_onicai_fork/common/build-info.cpp",
    "src/llama_cpp_onicai_fork/common/grammar-parser.cpp",
    "src/llama_cpp_onicai_fork/common/sampling.cpp",
    "src/llama_cpp_onicai_fork/common/common.cpp",
    "src/llama_cpp_onicai_fork/llama.cpp",
    "src/*.cpp",
]
cpp_include_dirs = [
    "src/llama_cpp_onicai_fork",
    "src/llama_cpp_onicai_fork/common",
    "src/vendors/*",
]
# NOTE: Adding compile flag "-msimd128" might be too much. It will compile everything with simd
#       Alternative is to add it at granular level in the code, like:
#       // Function with SIMD128 enabled
#       void __attribute__((target("simd128"))) simd_function() {
#           // SIMD-specific code here
#       }
cpp_compile_flags = []
cpp_link_flags = []
c_paths = [
    "src/llama_cpp_onicai_fork/ggml.c",
    "src/llama_cpp_onicai_fork/ggml-alloc.c",
    "src/llama_cpp_onicai_fork/ggml-backend.c",
    "src/llama_cpp_onicai_fork/ggml-quants.c",
]
c_include_dirs = [
    "src/llama_cpp_onicai_fork",
    "src/llama_cpp_onicai_fork/common",
]
c_compile_flags = []
[build-native]
cpp_paths = [
    # Use this to build native debug executable for testing canister code
    "native/main.cpp",

    # Use this to build the original console app of llama.cpp, without canister wrapper
    # "src/llama_cpp_onicai_fork/examples/main/main.cpp",
    # "src/llama_cpp_onicai_fork/common/console.cpp",
]
cpp_include_dirs = [
    "src/llama_cpp_onicai_fork",
    "src/llama_cpp_onicai_fork/common",
]
cpp_compile_flags = []
cpp_link_flags = []
c_paths = []
c_include_dirs = []
c_compile_flags = []
